
<algconf><node type="and" name="__dummy__" domain="[0]" ignore="true"
><node type="and" name="barrier_limits_growth" domain="[1000000.0, 100000000000000.0]" prefix="set_barrier_limits_growth " 
  /><node type="and" name="barrier_algorithm" domain="{0,1,2,3}" prefix="set_barrier_algorithm " 
 /><node type="and" name="barrier_crossover" domain="{0,1,2}" prefix="set_barrier_crossover " 
 /><node type="and" name="barrier_limits_corrections" domain="{-1,0,1,4,16,64}" prefix="set_barrier_limits_corrections " 
 /><node type="and" name="barrier_ordering" domain="{0,1,2,3}" prefix="set_barrier_ordering " 
 /><node type="and" name="barrier_startalg" domain="{1,2,3,4}" prefix="set_barrier_startalg " 
 /><node type="and" name="emphasis_mip" domain="{0,1,2,3,4,5}" prefix="set_emphasis_mip " 
 /><node type="and" name="emphasis_numerical" domain="{yes,no}" prefix="set_emphasis_numerical "
 /><node type="and" name="feasopt_mode" domain="{0,1,2,3,4,5}" prefix="set_feasopt_mode " 
 /><node type="and" name="lpmethod" domain="{0,1,2,3,4,5,6}" prefix="set_lpmethod " 
 /><node type="and" name="mip_cuts_cliques" domain="{-1,0,1,2,3}" prefix="set_mip_cuts_cliques " 
 /><node type="and" name="mip_cuts_covers" domain="{-1,0,1,2,3}" prefix="set_mip_cuts_covers " 
 /><node type="and" name="mip_cuts_disjunctive" domain="{-1,0,1,2,3}" prefix="set_mip_cuts_disjunctive " 
 /><node type="and" name="mip_cuts_flowcovers" domain="{-1,0,1,2}" prefix="set_mip_cuts_flowcovers " 
 /><node type="and" name="mip_cuts_gomory" domain="{-1,0,1,2}" prefix="set_mip_cuts_gomory " 
 /><node type="and" name="mip_cuts_gubcovers" domain="{-1,0,1,2}" prefix="set_mip_cuts_gubcovers " 
 /><node type="and" name="mip_cuts_implied" domain="{-1,0,1,2}" prefix="set_mip_cuts_implied " 
 /><node type="and" name="mip_cuts_mcfcut" domain="{-1,0,1,2}" prefix="set_mip_cuts_mcfcut " 
 /><node type="and" name="mip_cuts_mircut" domain="{-1,0,1,2}" prefix="set_mip_cuts_mircut " 
 /><node type="and" name="mip_cuts_pathcut" domain="{-1,0,1,2}" prefix="set_mip_cuts_pathcut " 
 /><node type="and" name="mip_cuts_zerohalfcut" domain="{-1,0,1,2}" prefix="set_mip_cuts_zerohalfcut " 
 /><node type="and" name="mip_limits_aggforcut" domain="[0, 10]" prefix="set_mip_limits_aggforcut "
  /><node type="and" name="mip_limits_cutsfactor" domain="[1.0, 16.0]" prefix="set_mip_limits_cutsfactor " 
  /><node type="and" name="mip_limits_cutpasses" domain="{-1,0,1,4,16,64}" prefix="set_mip_limits_cutpasses " 
 /><node type="and" name="mip_limits_gomorycand" domain="[50, 800]" prefix="set_mip_limits_gomorycand "
  /><node type="and" name="mip_limits_gomorypass" domain="{0,1,4,16,64}" prefix="set_mip_limits_gomorypass "
 /><node type="and" name="mip_submip_nodelimit" domain="[125, 2000]" prefix="set_mip_submip_nodelimit "
 /><node type="and" name="mip_strategy_backtrack" domain="{0.9,0.99,0.999,0.9999,0.99999,0.999999}" prefix="set_mip_strategy_backtrack " 
 /><node type="and" name="mip_strategy_bbinterval" domain="[1, 1000]" prefix="set_mip_strategy_bbinterval " 
  /><node type="and" name="mip_strategy_branch" domain="{-1,0,1}" prefix="set_mip_strategy_branch " 
 /><node type="and" name="mip_strategy_dive" domain="{0,1,2,3}" prefix="set_mip_strategy_dive " 
 /><node type="and" name="mip_strategy_file" domain="{0,1}" prefix="set_mip_strategy_file " 
 /><node type="and" name="mip_strategy_fpheur" domain="{-1,0,1,2}" prefix="set_mip_strategy_fpheur " 
 /><node type="and" name="mip_strategy_heuristicfreq" domain="{-1,0,5,10,20,40,80}" prefix="set_mip_strategy_heuristicfreq " 
 /><node type="and" name="mip_strategy_lbheur" domain="{yes,no}" prefix="set_mip_strategy_lbheur "
 /><node type="and" name="mip_strategy_nodeselect" domain="{0,1,2,3}" prefix="set_mip_strategy_nodeselect "
 /><node type="and" name="mip_strategy_presolvenode" domain="{-1,0,1,2}" prefix="set_mip_strategy_presolvenode " 
 /><node type="and" name="mip_strategy_probe" domain="{-1,0,1,2,3}" prefix="set_mip_strategy_probe " 
 /><node type="and" name="mip_strategy_rinsheur" domain="{-1,0,5,10,20,40,80}" prefix="set_mip_strategy_rinsheur " 
 /><node type="and" name="mip_strategy_search" domain="{0,1,2}" prefix="set_mip_strategy_search " 
 /><node type="and" name="mip_strategy_startalgorithm" domain="{0,1,2,3,4,5,6}" prefix="set_mip_strategy_startalgorithm " 
 /><node type="and" name="mip_strategy_subalgorithm" domain="{0,1,2,3,4,5}" prefix="set_mip_strategy_subalgorithm "
 /><node type="and" name="network_netfind" domain="{1,2,3}" prefix="set_network_netfind " 
 /><node type="and" name="network_pricing" domain="{0,1,2}" prefix="set_network_pricing "
  /><node type="and" name="preprocessing_aggregator" domain="{-1,0,1,4,16,64}" prefix="set_preprocessing_aggregator " 
 /><node type="and" name="preprocessing_boundstrength" domain="{-1,0,1}" prefix="set_preprocessing_boundstrength " 
 /><node type="and" name="preprocessing_coeffreduce" domain="{0,1,2}" prefix="set_preprocessing_coeffreduce " 
 /><node type="and" name="preprocessing_dependency" domain="{-1,0,1,2,3}" prefix="set_preprocessing_dependency " 
 /><node type="and" name="preprocessing_dual" domain="{-1,0,1}" prefix="set_preprocessing_dual " 
 /><node type="and" name="preprocessing_fill" domain="[2, 40]" prefix="set_preprocessing_fill "
  /><node type="and" name="preprocessing_linear" domain="{0,1}" prefix="set_preprocessing_linear " 
 /><node type="and" name="preprocessing_numpass" domain="{-1,0,1,4,16,64}" prefix="set_preprocessing_numpass " 
 /><node type="and" name="preprocessing_reduce" domain="{0,1,2,3}" prefix="set_preprocessing_reduce " 
 /><node type="and" name="preprocessing_relax" domain="{-1,0,1}" prefix="set_preprocessing_relax " 
 /><node type="and" name="preprocessing_repeatpresolve" domain="{-1,0,1,2,3}" prefix="set_preprocessing_repeatpresolve " 
 /><node type="and" name="preprocessing_symmetry" domain="{-1,0,1,2,3,4,5}" prefix="set_preprocessing_symmetry " 
 /><node type="and" name="read_scale" domain="{-1,0,1}" prefix="set_read_scale " 
 /><node type="and" name="sifting_algorithm" domain="{0,1,2,3,4}" prefix="set_sifting_algorithm " 
 /><node type="and" name="simplex_crash" domain="{-1,0,1}" prefix="set_simplex_crash " 
 /><node type="and" name="simplex_dgradient" domain="{0,1,2,3,4,5}" prefix="set_simplex_dgradient " 
 /><node type="and" name="simplex_limits_perturbation" domain="{0,1,4,16,64}" prefix="set_simplex_limits_perturbation " 
 /><node type="and" name="simplex_limits_singularity" domain="[2, 40]" prefix="set_simplex_limits_singularity "
 /><node type="and" name="simplex_pgradient" domain="{-1,0,1,2,3,4}" prefix="set_simplex_pgradient " 
 /><node type="and" name="simplex_pricing" domain="{0,1,4,16,64}" prefix="set_simplex_pricing " 
 /><node type="and" name="simplex_refactor" domain="{0,4,16,64,256}" prefix="set_simplex_refactor " 
 /><node type="and" name="simplex_tolerances_markowitz" domain="[0.0001, 0.5]" prefix="set_simplex_tolerances_markowitz "
          /><node type="or" name="mip_strategy_variableselect" domain="{-1,0,1,2,3,4}" prefix="set_mip_strategy_variableselect ">
         <node type="and" name="mip_limits_strongcand" or-domain="{3}" domain="[2, 40]" prefix="set_mip_limits_strongcand " />
         <node type="and" name="mip_limits_strongit" or-domain="{3}" domain="{0,1,4,16,64}" prefix="set_mip_limits_strongit " />
               </node>
        <node type="or" name="mip_ordertype" domain="{0,1,2,3}" prefix="set_mip_ordertype " >
          <node type="and" name="mip_strategy_order" or-domain="{1,2,3}" domain="{yes,no}" prefix="set_mip_strategy_order " />
        </node>
      <node type="or" name="simplex_perturbation_switch" domain="{no,yes}" prefix="simplex_perturbation_switch " >
        <node type="and" name="perturbation_constant" or-domain="{yes}" domain="[1e-08, 0.0001]" prefix="perturbation_constant " />
      </node>
</node>
></algconf>